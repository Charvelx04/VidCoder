[Setup]
AppName=%appName%
AppVerName=%appVerName%
AppVersion=%version%
AppPublisher=RandomEngy
AppPublisherURL=http://vidcoder.codeplex.com/

DefaultDirName={pf}\%folderName%
DisableProgramGroupPage=yes
UninstallDisplayIcon={app}\VidCoder.exe
Compression=lzma
SolidCompression=yes
SetupIconFile=VidCoder_Setup.ico

OutputDir=BuiltInstallers
OutputBaseFilename=%outputBaseFileName%

AppId=%appId%
UsePreviousAppDir=yes

%x64Directives%

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "Files\%arch%\*"; DestDir: "{app}"; Flags: recursesubdirs ignoreversion

[Registry]
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\EventHandlers\PlayBluRayOnArrival"; ValueType: string; ValueName: "%appNameNoSpace%RipDriveOnArrival"; ValueData: ""; Flags: uninsdeletevalue
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\EventHandlers\PlayDVDMovieOnArrival"; ValueType: string; ValueName: "%appNameNoSpace%RipDriveOnArrival"; ValueData: ""; Flags: uninsdeletevalue

Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\Handlers\%appNameNoSpace%RipDriveOnArrival"; Flags: uninsdeletekey
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\Handlers\%appNameNoSpace%RipDriveOnArrival"; ValueType: string; ValueName: "Action"; ValueData: "Rip"
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\Handlers\%appNameNoSpace%RipDriveOnArrival"; ValueType: string; ValueName: "DefaultIcon"; ValueData: "{app}\VidCoder.exe,0"
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\Handlers\%appNameNoSpace%RipDriveOnArrival"; ValueType: string; ValueName: "InvokeProgId"; ValueData: "%appNameNoSpace%.RipDrive"
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\Handlers\%appNameNoSpace%RipDriveOnArrival"; ValueType: string; ValueName: "InvokeVerb"; ValueData: "rip"
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\Handlers\%appNameNoSpace%RipDriveOnArrival"; ValueType: string; ValueName: "Provider"; ValueData: "%appName%"

Root: HKCR; Subkey: "%appNameNoSpace%.RipDrive"; Flags: uninsdeletekey
Root: HKCR; Subkey: "%appNameNoSpace%.RipDrive\shell"
Root: HKCR; Subkey: "%appNameNoSpace%.RipDrive\shell\rip"
Root: HKCR; Subkey: "%appNameNoSpace%.RipDrive\shell\rip\command"; ValueType: string; ValueData: """{app}\VidCoderWindowlessCLI.exe"" scan -s %L"

[Messages]
WelcomeLabel2=This will install [name/ver] on your computer.

[Icons]
Name: "{commonprograms}\%appName%"; Filename: "{app}\VidCoder.exe"; WorkingDir: "{app}"

[Run]
Filename: "{app}\VidCoder.exe"; Description: "Run VidCoder"; Flags: postinstall nowait skipifsilent

[UninstallDelete]
Type: filesandordirs; Name: "{userappdata}\%folderName%\Updates"
Type: filesandordirs; Name: "{localappdata}\%folderName%"

[CustomMessages]
dotnetmissing=VidCoder requires Microsoft .NET Framework 4, which is not installed. Would you like to download it now?

[Code]

function InitializeSetup(): Boolean;
var
  Version: TWindowsVersion;
  netFrameWorkInstalled : Boolean;
  isInstalled: Cardinal;
  ErrorCode: Integer;
begin
	GetWindowsVersionEx(Version);
	
	if (Version.Major < 5) or ((Version.Major = 5) and (Version.Minor < 1)) or ((Version.Major = 5) and (Version.Minor = 1) and (Version.ServicePackMajor < 2)) then
	begin
    MsgBox('VidCoder cannot install on your operating system.', mbError, MB_OK);
    exit;
	end;
	
  result := true;

  isInstalled := 0;
  netFrameworkInstalled := RegQueryDWordValue(HKLM, 'Software\Microsoft\NET Framework Setup\NDP\v4\Client', 'Install', isInstalled);
  if ((netFrameworkInstalled)  and (isInstalled <> 1)) then netFrameworkInstalled := false;

  if netFrameworkInstalled = false then
  begin
    if (MsgBox(ExpandConstant('{cm:dotnetmissing}'),
        mbConfirmation, MB_YESNO) = idYes) then
    begin
      ShellExec('open',
      'http://www.microsoft.com/downloads/details.aspx?FamilyID=e5ad0459-cbcc-4b4f-97b6-fb17111cf544',
      '','',SW_SHOWNORMAL,ewNoWait,ErrorCode);
    end;
    result := false;
  end;
end;

//util method, equivalent to C# string.StartsWith
function StartsWith(SubStr, S: String):Boolean;
begin
  Result:= Pos(SubStr, S) = 1;
end;

//util method, equivalent to C# string.Replace
function StringReplace(S, oldSubString, newSubString: String) : String;
var
  stringCopy : String;
begin
  stringCopy := S; //Prevent modification to the original string
  StringChange(stringCopy, oldSubString, newSubString);
  Result := stringCopy;
end;

//==================================================================
function GetCommandlineParam (inParamName: String):String;
var
   paramNameAndValue: String;
   i: Integer;
begin
   Result := '';

   for i:= 0 to ParamCount do
   begin
     paramNameAndValue := ParamStr(i);
     if (StartsWith(inParamName, paramNameAndValue)) then
     begin
       Result := StringReplace(paramNameAndValue, inParamName + '=', '');
       break;
     end;
   end;
end;

// Delete app data
procedure DeleteUserFiles();
var
  iAns: Integer;
begin
  if UninstallSilent() then exit;
  
  iAns := MsgBox('Do you want to delete your settings and presets as well?', mbConfirmation, MB_YESNO or MB_DEFBUTTON2);

  if iAns = IDYES then
  begin
    DelTree(ExpandConstant('{userappdata}') + '\%folderName%', True, True, True);
  end; 
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
   showSuccessDialog: String;
begin
  case CurStep of
    ssDone:
      begin
        showSuccessDialog := GetCommandLineParam('/showSuccessDialog');
        if showSuccessDialog <> '' then
        begin
          MsgBox('VidCoder has been successfully updated.', mbInformation, MB_OK);
        end;
     end;
  end;
end;


procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  case CurUninstallStep of
    usUninstall:
      begin
        DeleteUserFiles;
      end;
  end;
end;


















