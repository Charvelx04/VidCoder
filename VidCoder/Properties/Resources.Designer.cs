//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VidCoder.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VidCoder.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
        ///
        ///This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
        ///
        ///A full copy of the GNU General P [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AboutLicense {
            get {
                return ResourceManager.GetString("AboutLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Burn the subtitles onto the picture. With burned subtitles, you cannot disable them during playback..
        /// </summary>
        public static string BurnedSubtitleToolTip {
            get {
                return ResourceManager.GetString("BurnedSubtitleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark this subtitle track as the default. This will show up during playback until another track is picked..
        /// </summary>
        public static string DefaultSubtitleToolTip {
            get {
                return ResourceManager.GetString("DefaultSubtitleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only display forced subtitles from the given track. Usually this means small bits of foreign dialogue..
        /// </summary>
        public static string ForcedSubtitleToolTip {
            get {
                return ResourceManager.GetString("ForcedSubtitleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include chapter markers from the input video in the encoded video..
        /// </summary>
        public static string IncludeChapterMarkersToolTip {
            get {
                return ResourceManager.GetString("IncludeChapterMarkersToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies a marker to the file that older iPods require before they&apos;ll allow H.264 video to sync..
        /// </summary>
        public static string IPod5GSupportToolTip {
            get {
                return ResourceManager.GetString("IPod5GSupportToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows files over 4GB. When enabled, uses 64-bit numbers in encoding. Some devices such as the iPod and PS3 are incompatible with this option..
        /// </summary>
        public static string LargeFileSizeToolTip {
            get {
                return ResourceManager.GetString("LargeFileSizeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time to push forward or delay the appearance of the given subtitles..
        /// </summary>
        public static string OffsetSubtitleToolTip {
            get {
                return ResourceManager.GetString("OffsetSubtitleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arrange file to play better as a progressive download..
        /// </summary>
        public static string WebOptimizedToolTip {
            get {
                return ResourceManager.GetString("WebOptimizedToolTip", resourceCulture);
            }
        }
    }
}
